{"version":3,"sources":["components/Form.js","components/Todo.js","components/List.js","App.js","index.js"],"names":["Form","inputText","setInputText","setTodos","todos","setStatus","sortHandler","setFilteredTodos","e","value","target","localTodos","JSON","parse","localStorage","getItem","aToz","sort","a","b","todoA","text","toUpperCase","todoB","setItem","stringify","zToa","className","onChange","type","maxLength","placeholder","onClick","preventDefault","todo","completed","id","Math","random","date","Date","toLocaleDateString","find","t","alert","name","Todo","map","filter","List","filteredTodos","key","App","useState","status","useEffect","getTodosFromLocalStorage","filterHandler","saveToLocalStorage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f419038.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Form=({inputText,setInputText,setTodos,todos,setStatus,setFilteredTodos})=>{\r\n    const inputHandler=(e)=>{\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        const todo = {\r\n            completed: false,\r\n            text: inputText,\r\n            id: Math.random()*10,\r\n            date: new Date().toLocaleDateString()\r\n}\r\n        if(todos.find(t=>t.text===todo.text))\r\n            alert('You already entered this todo dummy')\r\n        else setTodos([todo,...todos])\r\n        \r\n        setInputText('')\r\n    }\r\n    const statusHandler=(e)=>{setStatus(e.target.value)}\r\n    const sortHandler=(e)=>{\r\n        const value = e.target.value\r\n        const localTodos = JSON.parse(localStorage.getItem('todos'))\r\n    \r\n        if(localTodos!==[]||localTodos!==null){\r\n           if(value==='a-z'){\r\n               const aToz = localTodos.sort((a,b)=>{\r\n                   const todoA = a.text.toUpperCase()\r\n                   const todoB = b.text.toUpperCase()\r\n                   if(todoA<todoB)\r\n                       return -1\r\n                   if(todoA>todoB)\r\n                       return 1\r\n                   return 0\r\n               })\r\n               localStorage.setItem('todos',JSON.stringify(aToz))\r\n           }\r\n   \r\n           if(value==='z-a'){\r\n               const zToa = localTodos.sort((a,b)=>{\r\n                   const todoA = a.text.toUpperCase()\r\n                   const todoB = b.text.toUpperCase()\r\n                   if(todoB<todoA)\r\n                       return -1\r\n                   if(todoB<todoA)\r\n                       return 1\r\n                   return 0\r\n               })\r\n               localStorage.setItem('todos',JSON.stringify(zToa))\r\n           }\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"form-div\">\r\n            <form>\r\n                <div className=\"input-div\">\r\n                    <input value={inputText} onChange={inputHandler} type=\"text\" maxLength='30' placeholder='add todo...'/>\r\n                    <button onClick={submitHandler} type='submit'>+</button>\r\n                    <select onChange={statusHandler} name=\"filter\" id=\"\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"incomplete\">Icomplete</option>\r\n                    </select>\r\n                    <div className=\"button-container\">\r\n                        <button onClick={sortHandler} className=\"a-z\" value='a-z'>A-Z</button>\r\n                        <button onClick={sortHandler} className=\"z-a\" value='z-a'>Z-A</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\n\r\nconst Todo=({todo,todos,setTodos,text,date})=>{\r\n\r\nconst completeHandler=(e)=>{\r\n    setTodos(todos.map(t=>{\r\n        if(t.id===todo.id)\r\n            return {...t,completed: !t.completed}\r\n        else return t\r\n    }))\r\n}\r\nconst deleteHandler=(e)=>{\r\n    setTodos(todos.filter(t=>t.id!==todo.id))\r\n}\r\n\r\n    return(\r\n        <div className='todo-div'>\r\n            <li className='todo-item'>\r\n                <div className='date-div'>\r\n                    <p>{date}</p>\r\n                </div>\r\n                <div className=\"text-div\">\r\n                    <p>{text}</p>\r\n                </div>\r\n                <div className=\"btn-div\">\r\n                    <button onClick={completeHandler} className={`${\r\n                                                                    todo.completed?\r\n                                                                    'completed':\r\n                                                                     ''}`\r\n                                                                     } \r\n                                                                    >\r\n                                                                    {`${\r\n                                                                    todo.completed?\r\n                                                                    'completed' : \r\n                                                                    'complete?'}`\r\n                                                                    }\r\n                                                                    </button>\r\n                    <button onClick={deleteHandler} id='delete'>X</button>\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst List=({todos,setTodos,filteredTodos})=>{\r\n\r\n    return(\r\n        <div className='list-div'>\r\n            <ul>\r\n                {filteredTodos.map(t=>(\r\n                    <Todo\r\n                        key={t.id}\r\n                        text={t.text}\r\n                        date={t.date}\r\n                        completed={t.completed}\r\n                        todo={t}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport List from './components/List'\n\nfunction App() {\n\nconst [inputText,setInputText]=useState('')\nconst [todos,setTodos]=useState([])\nconst [status,setStatus]=useState('')\nconst [filteredTodos,setFilteredTodos]=useState([])\n\nuseEffect(()=>{getTodosFromLocalStorage()},[])\nuseEffect(()=>{\n  filterHandler()\n  saveToLocalStorage()\n},[todos,status])\n\nconst saveToLocalStorage=()=>{\n  localStorage.setItem('todos',JSON.stringify(todos))\n}\nconst getTodosFromLocalStorage=()=>{\n  if(localStorage.getItem('todos')===null)\n    localStorage.setItem('todos',JSON.stringify(todos))\n  else setTodos(JSON.parse(localStorage.getItem('todos')))\n}\n\nconst filterHandler=(e)=>{\n  switch(status){\n    case 'completed':\n      setFilteredTodos(todos.filter(t=>t.completed===true))\n      break;\n    case 'incomplete':\n      setFilteredTodos(todos.filter(t=>t.completed===false))\n      break;\n      default:\n        setFilteredTodos(todos)\n  }\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>What to do?</h1>\n      </header>\n      <Form \n        inputText={inputText} \n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n        setFilteredTodos={setFilteredTodos}\n       />\n      <List \n          setTodos={setTodos}\n          todos={todos}\n          filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}